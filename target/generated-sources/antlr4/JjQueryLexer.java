// Generated from JjQuery.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class JjQueryLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DOLLAR=1, LETTER=2, DIGIT=3, NUMBER=4, VAR=5, STRING=6, END=7, OPENP=8, 
		CLOSEP=9, OPENB=10, CLOSEB=11, IN=12, OUT=13, QUOTES=14, CONTAINS_SUB_STRING=15, 
		CONTAINS_WORD=16, CONTAINS_PREFIX=17, EQUALS=18, NOT_EQUALS=19, STARTS_WITH=20, 
		ENDS_WITH=21, BASIC_FILTER=22, CONTENT_FILTER=23, HIERARCHY_SELECTOR=24, 
		CHILD_FILTER=25, OPERATION=26, WS=27, BLOCKCOMMENT=28, JQBEGIN=29, JQEND=30;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'"
	};
	public static final String[] ruleNames = {
		"DOLLAR", "LETTER", "DIGIT", "NUMBER", "VAR", "STRING", "END", "OPENP", 
		"CLOSEP", "OPENB", "CLOSEB", "IN", "OUT", "QUOTES", "CONTAINS_SUB_STRING", 
		"CONTAINS_WORD", "CONTAINS_PREFIX", "EQUALS", "NOT_EQUALS", "STARTS_WITH", 
		"ENDS_WITH", "BASIC_FILTER", "CONTENT_FILTER", "HIERARCHY_SELECTOR", "CHILD_FILTER", 
		"OPERATION", "WS", "BLOCKCOMMENT", "JQBEGIN", "JQEND"
	};


	public JjQueryLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "JjQuery.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2 \u0137\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\3\2\3\2\3"+
		"\3\3\3\3\4\3\4\3\5\6\5G\n\5\r\5\16\5H\3\6\3\6\3\6\7\6N\n\6\f\6\16\6Q\13"+
		"\6\3\7\3\7\6\7U\n\7\r\7\16\7V\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3"+
		"\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\5\27\u00ad\n\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\5\30"+
		"\u00d1\n\30\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\5\32\u0118\n\32\3\33\3\33\3\33\3\34\6\34\u011e\n\34\r\34\16\34\u011f"+
		"\3\34\3\34\3\35\3\35\3\35\3\35\7\35\u0128\n\35\f\35\16\35\u012b\13\35"+
		"\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\u0129\2 \3\3"+
		"\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= \3"+
		"\2\6\6\2\"\"..C\\c|\3\2\62;\4\2@@\u0080\u0080\5\2\13\f\17\17\"\"\u014a"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\3?\3\2\2\2\5A\3\2\2\2\7C\3\2\2\2\tF\3\2\2\2\13J\3\2"+
		"\2\2\rT\3\2\2\2\17X\3\2\2\2\21Z\3\2\2\2\23\\\3\2\2\2\25^\3\2\2\2\27`\3"+
		"\2\2\2\31b\3\2\2\2\33e\3\2\2\2\35i\3\2\2\2\37k\3\2\2\2!n\3\2\2\2#q\3\2"+
		"\2\2%t\3\2\2\2\'v\3\2\2\2)y\3\2\2\2+|\3\2\2\2-\u00ac\3\2\2\2/\u00d0\3"+
		"\2\2\2\61\u00d2\3\2\2\2\63\u0117\3\2\2\2\65\u0119\3\2\2\2\67\u011d\3\2"+
		"\2\29\u0123\3\2\2\2;\u012f\3\2\2\2=\u0134\3\2\2\2?@\7&\2\2@\4\3\2\2\2"+
		"AB\t\2\2\2B\6\3\2\2\2CD\t\3\2\2D\b\3\2\2\2EG\5\7\4\2FE\3\2\2\2GH\3\2\2"+
		"\2HF\3\2\2\2HI\3\2\2\2I\n\3\2\2\2JO\5\5\3\2KN\5\5\3\2LN\5\7\4\2MK\3\2"+
		"\2\2ML\3\2\2\2NQ\3\2\2\2OM\3\2\2\2OP\3\2\2\2P\f\3\2\2\2QO\3\2\2\2RU\5"+
		"\5\3\2SU\5\7\4\2TR\3\2\2\2TS\3\2\2\2UV\3\2\2\2VT\3\2\2\2VW\3\2\2\2W\16"+
		"\3\2\2\2XY\7=\2\2Y\20\3\2\2\2Z[\7*\2\2[\22\3\2\2\2\\]\7+\2\2]\24\3\2\2"+
		"\2^_\7]\2\2_\26\3\2\2\2`a\7_\2\2a\30\3\2\2\2bc\7k\2\2cd\7p\2\2d\32\3\2"+
		"\2\2ef\7q\2\2fg\7w\2\2gh\7v\2\2h\34\3\2\2\2ij\7$\2\2j\36\3\2\2\2kl\7,"+
		"\2\2lm\7?\2\2m \3\2\2\2no\7\u0080\2\2op\7?\2\2p\"\3\2\2\2qr\7~\2\2rs\7"+
		"?\2\2s$\3\2\2\2tu\7?\2\2u&\3\2\2\2vw\7#\2\2wx\7?\2\2x(\3\2\2\2yz\7`\2"+
		"\2z{\7?\2\2{*\3\2\2\2|}\7&\2\2}~\7?\2\2~,\3\2\2\2\177\u0080\7<\2\2\u0080"+
		"\u0081\7g\2\2\u0081\u0082\7s\2\2\u0082\u0083\3\2\2\2\u0083\u0084\5\21"+
		"\t\2\u0084\u0085\5\23\n\2\u0085\u00ad\3\2\2\2\u0086\u0087\7<\2\2\u0087"+
		"\u0088\7p\2\2\u0088\u0089\7q\2\2\u0089\u008a\7v\2\2\u008a\u008b\3\2\2"+
		"\2\u008b\u008c\5\21\t\2\u008c\u008d\5\23\n\2\u008d\u00ad\3\2\2\2\u008e"+
		"\u008f\7<\2\2\u008f\u0090\7h\2\2\u0090\u0091\7k\2\2\u0091\u0092\7t\2\2"+
		"\u0092\u0093\7u\2\2\u0093\u00ad\7v\2\2\u0094\u0095\7<\2\2\u0095\u0096"+
		"\7n\2\2\u0096\u0097\7c\2\2\u0097\u0098\7u\2\2\u0098\u00ad\7v\2\2\u0099"+
		"\u009a\7<\2\2\u009a\u009b\7t\2\2\u009b\u009c\7q\2\2\u009c\u009d\7q\2\2"+
		"\u009d\u00ad\7v\2\2\u009e\u009f\7<\2\2\u009f\u00a0\7i\2\2\u00a0\u00a1"+
		"\7v\2\2\u00a1\u00a2\3\2\2\2\u00a2\u00a3\5\21\t\2\u00a3\u00a4\5\23\n\2"+
		"\u00a4\u00ad\3\2\2\2\u00a5\u00a6\7<\2\2\u00a6\u00a7\7n\2\2\u00a7\u00a8"+
		"\7v\2\2\u00a8\u00a9\3\2\2\2\u00a9\u00aa\5\21\t\2\u00aa\u00ab\5\23\n\2"+
		"\u00ab\u00ad\3\2\2\2\u00ac\177\3\2\2\2\u00ac\u0086\3\2\2\2\u00ac\u008e"+
		"\3\2\2\2\u00ac\u0094\3\2\2\2\u00ac\u0099\3\2\2\2\u00ac\u009e\3\2\2\2\u00ac"+
		"\u00a5\3\2\2\2\u00ad.\3\2\2\2\u00ae\u00af\7<\2\2\u00af\u00b0\7e\2\2\u00b0"+
		"\u00b1\7q\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7v\2\2\u00b3\u00b4\7c\2\2"+
		"\u00b4\u00b5\7k\2\2\u00b5\u00b6\7p\2\2\u00b6\u00b7\7u\2\2\u00b7\u00b8"+
		"\3\2\2\2\u00b8\u00b9\5\21\t\2\u00b9\u00ba\5\23\n\2\u00ba\u00d1\3\2\2\2"+
		"\u00bb\u00bc\7<\2\2\u00bc\u00bd\7g\2\2\u00bd\u00be\7o\2\2\u00be\u00bf"+
		"\7r\2\2\u00bf\u00c0\7v\2\2\u00c0\u00d1\7{\2\2\u00c1\u00c2\7<\2\2\u00c2"+
		"\u00c3\7j\2\2\u00c3\u00c4\7c\2\2\u00c4\u00c5\7u\2\2\u00c5\u00c6\3\2\2"+
		"\2\u00c6\u00c7\5\21\t\2\u00c7\u00c8\5\23\n\2\u00c8\u00d1\3\2\2\2\u00c9"+
		"\u00ca\7<\2\2\u00ca\u00cb\7r\2\2\u00cb\u00cc\7c\2\2\u00cc\u00cd\7t\2\2"+
		"\u00cd\u00ce\7g\2\2\u00ce\u00cf\7p\2\2\u00cf\u00d1\7v\2\2\u00d0\u00ae"+
		"\3\2\2\2\u00d0\u00bb\3\2\2\2\u00d0\u00c1\3\2\2\2\u00d0\u00c9\3\2\2\2\u00d1"+
		"\60\3\2\2\2\u00d2\u00d3\t\4\2\2\u00d3\62\3\2\2\2\u00d4\u00d5\7<\2\2\u00d5"+
		"\u00d6\7h\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9\7u\2\2"+
		"\u00d9\u00da\7v\2\2\u00da\u00db\7/\2\2\u00db\u00dc\7e\2\2\u00dc\u00dd"+
		"\7j\2\2\u00dd\u00de\7k\2\2\u00de\u00df\7n\2\2\u00df\u0118\7f\2\2\u00e0"+
		"\u00e1\7<\2\2\u00e1\u00e2\7n\2\2\u00e2\u00e3\7c\2\2\u00e3\u00e4\7u\2\2"+
		"\u00e4\u00e5\7v\2\2\u00e5\u00e6\7/\2\2\u00e6\u00e7\7e\2\2\u00e7\u00e8"+
		"\7j\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7n\2\2\u00ea\u0118\7f\2\2\u00eb"+
		"\u00ec\7<\2\2\u00ec\u00ed\7p\2\2\u00ed\u00ee\7v\2\2\u00ee\u00ef\7j\2\2"+
		"\u00ef\u00f0\7/\2\2\u00f0\u00f1\7e\2\2\u00f1\u00f2\7j\2\2\u00f2\u00f3"+
		"\7k\2\2\u00f3\u00f4\7n\2\2\u00f4\u00f5\7f\2\2\u00f5\u00f6\3\2\2\2\u00f6"+
		"\u00f7\5\21\t\2\u00f7\u00f8\5\23\n\2\u00f8\u0118\3\2\2\2\u00f9\u00fa\7"+
		"<\2\2\u00fa\u00fb\7p\2\2\u00fb\u00fc\7v\2\2\u00fc\u00fd\7j\2\2\u00fd\u00fe"+
		"\7/\2\2\u00fe\u00ff\7n\2\2\u00ff\u0100\7c\2\2\u0100\u0101\7u\2\2\u0101"+
		"\u0102\7v\2\2\u0102\u0103\7/\2\2\u0103\u0104\7e\2\2\u0104\u0105\7j\2\2"+
		"\u0105\u0106\7k\2\2\u0106\u0107\7n\2\2\u0107\u0108\7f\2\2\u0108\u0109"+
		"\3\2\2\2\u0109\u010a\5\21\t\2\u010a\u010b\5\23\n\2\u010b\u0118\3\2\2\2"+
		"\u010c\u010d\7<\2\2\u010d\u010e\7q\2\2\u010e\u010f\7p\2\2\u010f\u0110"+
		"\7n\2\2\u0110\u0111\7{\2\2\u0111\u0112\7/\2\2\u0112\u0113\7e\2\2\u0113"+
		"\u0114\7j\2\2\u0114\u0115\7k\2\2\u0115\u0116\7n\2\2\u0116\u0118\7f\2\2"+
		"\u0117\u00d4\3\2\2\2\u0117\u00e0\3\2\2\2\u0117\u00eb\3\2\2\2\u0117\u00f9"+
		"\3\2\2\2\u0117\u010c\3\2\2\2\u0118\64\3\2\2\2\u0119\u011a\7\60\2\2\u011a"+
		"\u011b\5\r\7\2\u011b\66\3\2\2\2\u011c\u011e\t\5\2\2\u011d\u011c\3\2\2"+
		"\2\u011e\u011f\3\2\2\2\u011f\u011d\3\2\2\2\u011f\u0120\3\2\2\2\u0120\u0121"+
		"\3\2\2\2\u0121\u0122\b\34\2\2\u01228\3\2\2\2\u0123\u0124\7\61\2\2\u0124"+
		"\u0125\7,\2\2\u0125\u0129\3\2\2\2\u0126\u0128\13\2\2\2\u0127\u0126\3\2"+
		"\2\2\u0128\u012b\3\2\2\2\u0129\u012a\3\2\2\2\u0129\u0127\3\2\2\2\u012a"+
		"\u012c\3\2\2\2\u012b\u0129\3\2\2\2\u012c\u012d\7,\2\2\u012d\u012e\7\61"+
		"\2\2\u012e:\3\2\2\2\u012f\u0130\7\61\2\2\u0130\u0131\7,\2\2\u0131\u0132"+
		"\7L\2\2\u0132\u0133\7S\2\2\u0133<\3\2\2\2\u0134\u0135\7,\2\2\u0135\u0136"+
		"\7\61\2\2\u0136>\3\2\2\2\r\2HMOTV\u00ac\u00d0\u0117\u011f\u0129\3\b\2"+
		"\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}